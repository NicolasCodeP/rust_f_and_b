name: Github Pages - WASM Build & Deploy

# Build and deploy WASM to GitHub Pages
on:
  push:
    branches:
      - main
  # Uncomment below to deploy on new releases instead of every push to main
  # release:
  #   types:
  #     - published

permissions:
  contents: write # for committing to gh-pages branch.

jobs:
  # Single job to build and deploy WASM to GitHub Pages
  build-and-deploy-wasm:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code including submodules
      - uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.PAT_TOKEN }} # Required for private submodules
      # Step 2: Setup Rust toolchain for WebAssembly
      - name: Setup toolchain for WASM
        run: |
          rustup update stable
          rustup default stable
          rustup set profile minimal
          rustup target add wasm32-unknown-unknown

      # Step 3: Cache Rust build artifacts for faster builds
      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      # Step 4: Install Trunk for WASM bundling
      - name: Install Trunk
        run: wget -qO- https://github.com/thedodd/trunk/releases/latest/download/trunk-x86_64-unknown-linux-gnu.tar.gz | tar -xzf-
      # Step 5: Build the WASM application
      - name: Build WASM application
        # The public_url variable ensures all assets have the correct paths
        # for GitHub Pages hosting at username.github.io/repo_name/
        run: ./trunk build --release --public-url $public_url
        env:
          public_url: "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"

      # Step 6: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist # Output folder with the built WASM application
          single-commit: true # Don't keep history of previous deployments
